<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[使用Hexo过程中遇到的问题]]></title>
      <url>/2017/01/19/Hexo%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h3 id="执行npm-install-g-hexo-cli时报错：如下图"><a href="#执行npm-install-g-hexo-cli时报错：如下图" class="headerlink" title="执行npm install -g hexo-cli时报错：如下图"></a>执行<code>npm install -g hexo-cli</code>时报错：如下图</h3><p><img src="https://dn-ningso.qbox.me/blog/permission-denied.png" alt="EACCES: permission denied, access &#39;/usr/local/lib/node_modules"><br>提示没有/usr/local/lib/node_modules路径没有权限</p>
<p>解决方法：执行该命令行获取权限<code>sudo chown -R $USER /usr/local/lib/node_modules</code></p>
<p>参考来源: <a href="http://stackoverflow.com/questions/16151018/npm-throws-error-without-sudo" target="_blank" rel="external">npm throws error without sudo</a></p>
]]></content>
      
        <categories>
            
            <category> Hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JobScheduler 遇到的一些小问题]]></title>
      <url>/2017/01/19/JobScheduler%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h3 id="Working-on-Android-Nougat"><a href="#Working-on-Android-Nougat" class="headerlink" title="Working on Android Nougat"></a>Working on Android Nougat</h3><p>在Android7.0上设置jobinfoBuilder.setPeriodic(5 * 1000);为5秒时，看到系统自己打印出来的logo,当时没太留意，然而问题出来了，我勒个去？？等了好久都没执行<code>onStartJob()</code>方法，但是看设置schedule()的时候确实返回的是成功啊。最后注意到这个结果！！</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">W/JobInfo: Specified interval for 1 is +5s0ms. Clamped to +15m0s0ms</div><div class="line">W/JobInfo: Specified flex for 1 is +5s0ms. Clamped to +5m0s0ms</div></pre></td></tr></table></figure>
<p>就是说指定周期间隔时间为5seconds，被强制指定为15minutes,<br>指定弹性延迟时间为5seconds，被强制指定为5minutes！！<br>这就日狗了。难道是因为Android Nuga的出了省电模式之后自己改了？？</p>
<p><img src="https://dn-ningso.qbox.me/blog/WX20161208-194549.png" alt="working on Nougat"></p>
<p>跟踪到API24源码我们发现：在JobInfo中设置了最小间隔时间和最小弹性时间，如果设置的比改值还小，则取默认值。。。千万只草泥马有没有。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">/* Minimum interval for a periodic job, in milliseconds. */</div><div class="line">   private static final long MIN_PERIOD_MILLIS = 15 * 60 * 1000L;   // 15 minutes</div><div class="line"></div><div class="line">/* Minimum flex for a periodic job, in milliseconds. */</div><div class="line">   private static final long MIN_FLEX_MILLIS = 5 * 60 * 1000L; // 5 minutes</div><div class="line">      /**</div><div class="line">    * Set to the interval between occurrences of this job. This value is &lt;b&gt;not&lt;/b&gt; set if the</div><div class="line">    * job does not recur periodically.</div><div class="line">    */</div><div class="line">   public long getIntervalMillis() &#123;</div><div class="line">       return intervalMillis &gt;= getMinPeriodMillis() ? intervalMillis : getMinPeriodMillis();//看！！这里！！</div><div class="line">   &#125;</div><div class="line">&lt;---省略若干无关代码---&gt;</div><div class="line">   /**</div><div class="line">    * Flex time for this job. Only valid if this is a periodic job.  The job can</div><div class="line">    * execute at any time in a window of flex length at the end of the period.</div><div class="line">    */</div><div class="line">   public long getFlexMillis() &#123;</div><div class="line">       long interval = getIntervalMillis();</div><div class="line">       long percentClamp = 5 * interval / 100;</div><div class="line">       long clampedFlex = Math.max(flexMillis, Math.max(percentClamp, getMinFlexMillis()));//看！！这里！！</div><div class="line">       return clampedFlex &lt;= interval ? clampedFlex : interval;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<p>在API为23的时候并没有这些，也就是说在24及以上版本会出现这样的问题。<br>作为解决方法，如果作业间隔小于15分钟，可以使用以下代码以定期间隔调度作业。不过该方式只能被执行一次。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">JobInfo jobInfo;</div><div class="line"><span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.N) &#123;</div><div class="line">  jobInfo = <span class="keyword">new</span> JobInfo.Builder(JOB_ID, serviceName)</div><div class="line">      .setMinimumLatency(REFRESH_INTERVAL)</div><div class="line">      .setExtras(bundle).build();</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">  jobInfo = <span class="keyword">new</span> JobInfo.Builder(JOB_ID, serviceName)</div><div class="line">      .setPeriodic(REFRESH_INTERVAL)</div><div class="line">      .setExtras(bundle).build();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>参考链接：</p>
<ul>
<li><a href="http://stackoverflow.com/questions/38344220/job-scheduler-not-running-on-android-n" target="_blank" rel="external">stackoverflow</a></li>
<li><a href="https://code.google.com/p/android/issues/detail?id=81265" target="_blank" rel="external">Android Open Source Issue</a></li>
</ul>
<h3 id="setPersisted-true-导致crash"><a href="#setPersisted-true-导致crash" class="headerlink" title="setPersisted(true) 导致crash"></a>setPersisted(true) 导致crash</h3>]]></content>
      
        <categories>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> JobScheduler </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[adb常用命令总结]]></title>
      <url>/2016/06/23/ADB%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<h2 id="ADB命令"><a href="#ADB命令" class="headerlink" title="ADB命令"></a>ADB命令</h2><ul>
<li>adb shell cat [file] <code>查看文件内容</code></li>
<li>adb shell service list <code>查看后台服务信息</code></li>
<li>adb push [local] [remote] <code>将电脑本地文件拷贝到手机设备</code></li>
<li>adb pull [remote] [local] <code>把文件从设备复制到本地电脑</code></li>
<li>adb shell monkey -v -p [packagename] 500 <code>执行monkey命令</code></li>
<li>adb shell dumpsys activity top  <code>查看栈顶activity的信息</code></li>
<li>adb shell pm clear [packagename] <code>清除应用数据</code></li>
</ul>
<h2 id="AAPT命令"><a href="#AAPT命令" class="headerlink" title="AAPT命令"></a>AAPT命令</h2><p> Android asset packaging tool</p>
<ul>
<li>aapt list filepath.apk <code>列出apk的所有资源文件目录清单</code></li>
<li>aapt list -v filepath.apk </li>
<li>aapt d[ump] [values] file.{apk} </li>
</ul>
<blockquote>
<p>下面的四个参值为values的值</p>
<ul>
<li><code>badging</code> 查看apk的包名，laber 权限等所有信息</li>
<li><code>permissions</code> 查看apk权限</li>
<li><code>resources</code> 打印的所有资源文件列表</li>
<li><code>configurations</code> 查看apk配置信息</li>
<li><code>configurations</code> 查看apk配置信息</li>
</ul>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ADB </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于华为手机EMUI4.0以上换字问题]]></title>
      <url>/2016/06/18/huawei-change-font-for-emui4-0/</url>
      <content type="html"><![CDATA[<h2 id="华为手机换字图文解说"><a href="#华为手机换字图文解说" class="headerlink" title="华为手机换字图文解说"></a>华为手机换字图文解说</h2><blockquote>
<ol>
<li>先在字体管家里面使用华为模式安装字体</li>
<li>成功之后打开华为主题商城－下载一款免费的主题</li>
<li>用文件管理打开<code>HWTheme</code>文件夹，在这个文件夹下面”纯数字文件名”的就是表示华为主题下载的免费主题文件（<code>.hwt文件后缀</code>），字体管家安装的字体也在这个里面（文件名中包含hifont字符）</li>
<li>把字体管家字体文件重命名改成华为下载的主题文件名</li>
<li>重新打开主题商城，点击试用刚才下载的免费主题即可换字 <code>(注意：部分华为手机修改完文件名之后，在主题商店-我的-已下载中，找不到刚才下载的主题，需要重新回到主题分类里面，找到该主题即可成功应用)</code></li>
</ol>
</blockquote>
<a id="more"></a>
<p><img src="http://fonts.b0.upaiyun.com/html/hauwei_img/img_1.JPG" alt="替的桌面"><br><img src="http://fonts.b0.upaiyun.com/html/hauwei_img/img_1_1.JPG" alt="替的桌面"><br><img src="http://fonts.b0.upaiyun.com/html/hauwei_img/img_2.JPG" alt="替的桌面"><br><img src="http://fonts.b0.upaiyun.com/html/hauwei_img/img_3.png" alt="替的桌面"><br><img src="http://fonts.b0.upaiyun.com/html/hauwei_img/img_4.JPG" alt="替的桌面"><br><img src="http://fonts.b0.upaiyun.com/html/hauwei_img/img_5.png" alt="替的桌面"><br><img src="http://fonts.b0.upaiyun.com/html/hauwei_img/img_6.JPG" alt="替的桌面"><br><img src="http://fonts.b0.upaiyun.com/html/hauwei_img/img_7.png" alt="替的桌面"><br><img src="http://fonts.b0.upaiyun.com/html/hauwei_img/img_8.JPG" alt="替的桌面"><br><img src="http://fonts.b0.upaiyun.com/html/hauwei_img/img_9.JPG" alt="替的桌面"><br><img src="http://fonts.b0.upaiyun.com/html/hauwei_img/img_10.png" alt="替的桌面"><br><img src="http://fonts.b0.upaiyun.com/html/hauwei_img/img_11.png" alt="替的桌面"><br><img src="http://fonts.b0.upaiyun.com/html/hauwei_img/img_12.png" alt="替的桌面"></p>
]]></content>
      
        <categories>
            
            <category> 字体 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Font </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[KeyTool的基本使用方式]]></title>
      <url>/2016/02/02/How-To-Use-KeyTool/</url>
      <content type="html"><![CDATA[<h3 id="keytool-创建签名keystore"><a href="#keytool-创建签名keystore" class="headerlink" title="keytool 创建签名keystore"></a>keytool 创建签名<code>keystore</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">keytool -genkey -alias Test -keyalg RSA -sigalg SHA1withRSA -validity 8030 -keystore ./xxxx.keystore -dname &quot;EMAILADDRESS=android.os@samsung.com, CN=Samsung Cert, OU=DMC, O=Samsung Corporation, L=Suwon City, ST=South Korea, C=KR&quot;</div></pre></td></tr></table></figure>
<p>结果<br><img src="http://7xiowj.com1.z0.glb.clouddn.com/QQ20160203-1@2x.png" alt="创建签名"></p>
<h3 id="Keytool-查看keystore的签名信息"><a href="#Keytool-查看keystore的签名信息" class="headerlink" title="Keytool 查看keystore的签名信息"></a>Keytool 查看keystore的签名信息</h3><p>执行如下命令，并按照提示输入keystore 密码</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">keytool -list -v -keystore XXXX.keystore</div></pre></td></tr></table></figure>
<p>结果：<br><img src="http://7xiowj.com1.z0.glb.clouddn.com/QQ20160203-0@2x.png" alt="keystore的签名信息"></p>
<h3 id="Keytool-查看apk的签名信息"><a href="#Keytool-查看apk的签名信息" class="headerlink" title="Keytool 查看apk的签名信息"></a>Keytool 查看apk的签名信息</h3><p>解压apk得到META-INF文件夹下面的RSA文件，执行如下命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">keytool -printcert -file XXX/META-INF/CERT.RSA</div></pre></td></tr></table></figure></p>
<p> 结果：<br><img src="http://7xiowj.com1.z0.glb.clouddn.com/QQ20160203-2@2x.png" alt="查看apk的签名信息"></p>
]]></content>
      
        <categories>
            
            <category> Android工具类介绍 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android </tag>
            
            <tag> KeyTool </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[How to Root Nexus6 Devices on Android Marshmallow 6.0]]></title>
      <url>/2015/12/19/How-to-Root-on-Nexus6-Android6-0/</url>
      <content type="html"><![CDATA[<blockquote>
<p>教程</p>
</blockquote>
<ul>
<li><a href="http://www.ibtimes.co.uk/how-root-android-6-0-marshmallow-build-mra58k-nexus-5-6-7-9-nexus-player-1522653" target="_blank" rel="external">网页教程</a></li>
<li><a href="https://www.youtube.com/watch?v=HmpaxJJOhi0" target="_blank" rel="external">视频教程</a></li>
</ul>
<blockquote>
<p>材料准备</p>
</blockquote>
<ul>
<li><a href="https://twrp.me/devices/motorolanexus6.html" target="_blank" rel="external">下载twrp包</a></li>
<li><a href="http://elementalx.org/devices/nexus-6/" target="_blank" rel="external">下载supperSu 和elementalX 包</a></li>
</ul>
<blockquote>
<p>操作</p>
</blockquote>
<p>1、将SuperSu.zip和ElementalX.zip复制到ni的sd卡的目录下<br>2、将手机关机进入到Bootloader模式，并将数据线连接电脑（安装包adb环境）<br>3、执行 fastboot flash recovery twrp-2.8.7.1-shamu.img<br>4、然后拔去数据线连接，用手机音量减键选择Recovery mode并确认进入<br>5、滑动<code>swipe to Allow Modifications</code> –&gt;点击<code>install</code><br>6、找到复制到SD卡里面的<code>ElementalX.zip</code>并点击<br>7、滑动<code>swpie to Confim Flash</code> –&gt;<code>next</code><br>8、选择- [x]<code>I Agree with these Terms of Use</code>–&gt;<code>next</code>–&gt;看到弹窗框<code>ok</code><br>9、连续点<code>next</code>最后没了在选择点击<code>install ElementalX</code>–&gt;<code>finish</code><br>10、滑动<code>swipe to Unlock</code>解锁<br>11、<code>Wipe Cache&amp;Dalvik</code>–&gt;<code>Swipe to Wipe</code>–&gt;<code>Back</code><br>12、点击选择复制到SD卡里面的<code>SuperSu.zip</code>–&gt;<code>swipe to Confirm Flash</code><br>13、再次执行一边操作<code>Wipe Cache&amp;Dalvik</code>–&gt;<code>Swipe to Wipe</code>—&gt;<code>Back</code><br>14、最后点击<code>Reboot System</code>重启手机可以在桌面看到如下图我手机一样的SuperSu图标了</p>
<a id="more"></a>
<blockquote>
<p>以上步骤都是根据视屏里面讲解来的，翻不了墙没办法打开Youtube视频的可以直接安装上面操作步骤来做。</p>
</blockquote>
<hr>
<p><img src="https://dn-ningso.qbox.me/image/git-markdown/shuaroot1.png" alt="Paste_Image.png"></p>
<p><img src="https://dn-ningso.qbox.me/image/git-markdown/shuaroot2.png" alt="Paste_Image.png"></p>
<p><img src="https://dn-ningso.qbox.me/image/git-markdown/shauroot3.png" alt="Paste_Image.png"></p>
<ul>
<li>如有不懂欢迎留言</li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> Nexus6 </tag>
            
            <tag> Android 6.0 </tag>
            
            <tag> Root </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
