[{"title":"使用Hexo过程中遇到的问题","date":"2017-01-19T14:16:00.000Z","path":"2017/01/19/Hexo遇到的问题/","text":"执行npm install -g hexo-cli时报错：如下图提示没有/usr/local/lib/node_modules路径没有权限 解决方法：执行该命令行获取权限sudo chown -R $USER /usr/local/lib/node_modules 参考来源: npm throws error without sudo","tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://ningso.me/tags/Hexo/"}]},{"title":"JobScheduler 遇到的一些小问题","date":"2017-01-19T14:16:00.000Z","path":"2017/01/19/JobScheduler遇到的一些小问题/","text":"Working on Android Nougat在Android7.0上设置jobinfoBuilder.setPeriodic(5 * 1000);为5秒时，看到系统自己打印出来的logo,当时没太留意，然而问题出来了，我勒个去？？等了好久都没执行onStartJob()方法，但是看设置schedule()的时候确实返回的是成功啊。最后注意到这个结果！！ 12W/JobInfo: Specified interval for 1 is +5s0ms. Clamped to +15m0s0msW/JobInfo: Specified flex for 1 is +5s0ms. Clamped to +5m0s0ms 就是说指定周期间隔时间为5seconds，被强制指定为15minutes,指定弹性延迟时间为5seconds，被强制指定为5minutes！！这就日狗了。难道是因为Android Nuga的出了省电模式之后自己改了？？ 跟踪到API24源码我们发现：在JobInfo中设置了最小间隔时间和最小弹性时间，如果设置的比改值还小，则取默认值。。。千万只草泥马有没有。 1234567891011121314151617181920212223/* Minimum interval for a periodic job, in milliseconds. */ private static final long MIN_PERIOD_MILLIS = 15 * 60 * 1000L; // 15 minutes/* Minimum flex for a periodic job, in milliseconds. */ private static final long MIN_FLEX_MILLIS = 5 * 60 * 1000L; // 5 minutes /** * Set to the interval between occurrences of this job. This value is &lt;b&gt;not&lt;/b&gt; set if the * job does not recur periodically. */ public long getIntervalMillis() &#123; return intervalMillis &gt;= getMinPeriodMillis() ? intervalMillis : getMinPeriodMillis();//看！！这里！！ &#125;&lt;---省略若干无关代码---&gt; /** * Flex time for this job. Only valid if this is a periodic job. The job can * execute at any time in a window of flex length at the end of the period. */ public long getFlexMillis() &#123; long interval = getIntervalMillis(); long percentClamp = 5 * interval / 100; long clampedFlex = Math.max(flexMillis, Math.max(percentClamp, getMinFlexMillis()));//看！！这里！！ return clampedFlex &lt;= interval ? clampedFlex : interval; &#125; 在API为23的时候并没有这些，也就是说在24及以上版本会出现这样的问题。作为解决方法，如果作业间隔小于15分钟，可以使用以下代码以定期间隔调度作业。不过该方式只能被执行一次。 12345678910JobInfo jobInfo;if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.N) &#123; jobInfo = new JobInfo.Builder(JOB_ID, serviceName) .setMinimumLatency(REFRESH_INTERVAL) .setExtras(bundle).build();&#125; else &#123; jobInfo = new JobInfo.Builder(JOB_ID, serviceName) .setPeriodic(REFRESH_INTERVAL) .setExtras(bundle).build();&#125; 参考链接： stackoverflow Android Open Source Issue setPersisted(true) 导致crash","tags":[{"name":"JobScheduler","slug":"JobScheduler","permalink":"http://ningso.me/tags/JobScheduler/"}]},{"title":"adb常用命令总结","date":"2016-06-23T15:26:13.000Z","path":"2016/06/23/ADB常用命令总结/","text":"ADB命令 adb shell cat [file] 查看文件内容 adb shell service list 查看后台服务信息 adb push [local] [remote] 将电脑本地文件拷贝到手机设备 adb pull [remote] [local] 把文件从设备复制到本地电脑 adb shell monkey -v -p [packagename] 500 执行monkey命令 adb shell dumpsys activity top 查看栈顶activity的信息 adb shell pm clear [packagename] 清除应用数据 AAPT命令 Android asset packaging tool aapt list filepath.apk 列出apk的所有资源文件目录清单 aapt list -v filepath.apk aapt d[ump] [values] file.{apk} 下面的四个参值为values的值 badging 查看apk的包名，laber 权限等所有信息 permissions 查看apk权限 resources 打印的所有资源文件列表 configurations 查看apk配置信息 configurations 查看apk配置信息","tags":[{"name":"ADB","slug":"ADB","permalink":"http://ningso.me/tags/ADB/"}]},{"title":"关于华为手机EMUI4.0以上换字问题","date":"2016-06-18T15:52:42.000Z","path":"2016/06/18/huawei-change-font-for-emui4-0/","text":"华为手机换字图文解说 先在字体管家里面使用华为模式安装字体 成功之后打开华为主题商城－下载一款免费的主题 用文件管理打开HWTheme文件夹，在这个文件夹下面”纯数字文件名”的就是表示华为主题下载的免费主题文件（.hwt文件后缀），字体管家安装的字体也在这个里面（文件名中包含hifont字符） 把字体管家字体文件重命名改成华为下载的主题文件名 重新打开主题商城，点击试用刚才下载的免费主题即可换字 (注意：部分华为手机修改完文件名之后，在主题商店-我的-已下载中，找不到刚才下载的主题，需要重新回到主题分类里面，找到该主题即可成功应用)","tags":[{"name":"Font","slug":"Font","permalink":"http://ningso.me/tags/Font/"}]},{"title":"KeyTool的基本使用方式","date":"2016-02-02T15:52:42.000Z","path":"2016/02/02/How-To-Use-KeyTool/","text":"keytool 创建签名keystore1keytool -genkey -alias Test -keyalg RSA -sigalg SHA1withRSA -validity 8030 -keystore ./xxxx.keystore -dname &quot;EMAILADDRESS=android.os@samsung.com, CN=Samsung Cert, OU=DMC, O=Samsung Corporation, L=Suwon City, ST=South Korea, C=KR&quot; 结果 Keytool 查看keystore的签名信息执行如下命令，并按照提示输入keystore 密码 1keytool -list -v -keystore XXXX.keystore 结果： Keytool 查看apk的签名信息解压apk得到META-INF文件夹下面的RSA文件，执行如下命令1keytool -printcert -file XXX/META-INF/CERT.RSA 结果：","tags":[{"name":"Android","slug":"Android","permalink":"http://ningso.me/tags/Android/"},{"name":"KeyTool","slug":"KeyTool","permalink":"http://ningso.me/tags/KeyTool/"}]},{"title":"How to Root Nexus6 Devices on Android Marshmallow 6.0","date":"2015-12-19T14:16:16.000Z","path":"2015/12/19/How-to-Root-on-Nexus6-Android6-0/","text":"教程 网页教程 视频教程 材料准备 下载twrp包 下载supperSu 和elementalX 包 操作 1、将SuperSu.zip和ElementalX.zip复制到ni的sd卡的目录下2、将手机关机进入到Bootloader模式，并将数据线连接电脑（安装包adb环境）3、执行 fastboot flash recovery twrp-2.8.7.1-shamu.img4、然后拔去数据线连接，用手机音量减键选择Recovery mode并确认进入5、滑动swipe to Allow Modifications –&gt;点击install6、找到复制到SD卡里面的ElementalX.zip并点击7、滑动swpie to Confim Flash –&gt;next8、选择- [x]I Agree with these Terms of Use–&gt;next–&gt;看到弹窗框ok9、连续点next最后没了在选择点击install ElementalX–&gt;finish10、滑动swipe to Unlock解锁11、Wipe Cache&amp;Dalvik–&gt;Swipe to Wipe–&gt;Back12、点击选择复制到SD卡里面的SuperSu.zip–&gt;swipe to Confirm Flash13、再次执行一边操作Wipe Cache&amp;Dalvik–&gt;Swipe to Wipe—&gt;Back14、最后点击Reboot System重启手机可以在桌面看到如下图我手机一样的SuperSu图标了 以上步骤都是根据视屏里面讲解来的，翻不了墙没办法打开Youtube视频的可以直接安装上面操作步骤来做。 如有不懂欢迎留言","tags":[{"name":"Nexus6","slug":"Nexus6","permalink":"http://ningso.me/tags/Nexus6/"},{"name":"Android 6.0","slug":"Android-6-0","permalink":"http://ningso.me/tags/Android-6-0/"},{"name":"Root","slug":"Root","permalink":"http://ningso.me/tags/Root/"}]}]